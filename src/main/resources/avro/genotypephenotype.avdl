@namespace("org.ga4gh.models")
/**
This protocol defines genotype to phenotype relationships
*/
protocol GenotypePhenotype {

import idl "common.avdl";
import idl "variants.avdl";
import idl "metadata.avdl";
import idl "sequenceAnnotations.avdl";


/**
The context in which a genotype gives rise to a phenotype.
This is fairly open-ended; as a stub we have a simple ontology term.
For example, a controlled term for a drug
*/
record EnvironmentalContext {

  /** TODO: define potential ontologies */
  org.ga4gh.models.OntologyTerm environmentType;

  /** A textual description of the environment. This is used to complement the structured description in the environmentType field */
  union { null, string } description = null;

}


/**
An association to a phenotype and related information.
This record is intended primarily to be used in conjunction with variants, but the record can
also be composed with other kinds of entities such as diseases
*/
record Phenotype {
  /** The Phenotype ID. */
  string id;

  /** HPO is recommended */
  org.ga4gh.models.OntologyTerm phenotype;

  /** HPO is recommended */
  union { null, org.ga4gh.models.OntologyTerm } qualifier = null;

  /** HPO is recommended */
  /** TODO: also allow quantitative recording? */
  union { null, org.ga4gh.models.OntologyTerm } ageOfOnset = null;

  /** A textual description of the phenotype. This is used to complement the structured phenotype description in the phenotype field */
  union { null, string } description = null;

  /** If there is a specific numeric value associated with the phenotype, it is here */
  union { null, float, int } value = null;

  /**
    the environmental context in which the phenotype arises.
    multiple contexts can be specified - these are assumed to all hold together
  */
  array<EnvironmentalContext> environmentalContexts;

}


/**
Evidence for the phenotype association.
*/
record Evidence {

  /** ECO or OBI is recommended */
  org.ga4gh.models.OntologyTerm evidenceType;

  /** A textual description of the evidence. This is used to complement the structured description in the evidenceType field */
  union { null, string } description = null;

}

/**
Different Types of associations
*/

enum AssociationType {
  VARIANT_PHENOTYPE,
  GENOMICFEATURE_PHENOTYPE,
  SAMPLE_PHENOTYPE,
  INDIVIDUAL_PHENOTYPE
}


/**
An association connects different components of the GA4GH API via some
evidence(such as literature, observation, or computational prediction)
The association connection type is denoted by the 'type' field. Based of the
association type, different optional fields will need to be filled out.
For example, the association is VARIANT_PHENOTYPE, then the variant and phenotype
fields will need to be filled out
*/
record Association {

  /** a unique string that identifies this association. If two associations records
     have the same id, they should be considered the same.
  */
  string id;

  /** An association type. Based on this selection, different pair of optional fields
  in this record will form a relationship
  */
  AssociationType type;

  /**
    The evidence for this association
  */
  Evidence evidence;

  /**
    The set of variants of the organism that bears the phenotype.
    If the goal is to associate a single variant, then a singleton VariantSet is used.
    This should be non null for: VARIANT_PHENOTYPE
  */
  union {null, org.ga4gh.models.VariantSet} variant = null;

  /**
    The Genotype feature for this association
    This should be non null for: GENOMICFEATURE_PHENOTYPE
  */
  union {null, org.ga4gh.models.FeatureSet} feature = null;

  /**
    The Individual for this association
    This should be non null for: INDIVIDUAL_PHENOTYPE
  */
  union {null, org.ga4gh.models.Individual} individual = null;

  /**
    The Sample for this association
    This should be non null for: SAMPLE_PHENOTYPE
  */
  union {null, org.ga4gh.models.Sample} sample = null;

  /**
    The phenotypic component of this association.
    This should be non null for: VARIANT_PHENOTYPE, GENOMICFEATURE_PHENOTYPE,
    SAMPLE_PHENOTYPE, INDIVIDUAL_PHENOTYPE
  */
  union {null, org.ga4gh.models.Phenotype} phenotype = null;

}



}
